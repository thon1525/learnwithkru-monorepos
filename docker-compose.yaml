# version: "3.8"
# services:
#   rabbitmq:
#     container_name: rabbitmq_container_verifyTutors
#     image: rabbitmq:3.13.2-management-alpine
#     restart: always
#     environment:
#       RABBITMQ_DEFAULT_USER: verifyTutors
#       RABBITMQ_DEFAULT_PASS: verifyTutors
#     ports:
#       - "5672:5672" # AMQP protocol port
#       - "15672:15672" # Management UI
#     healthcheck:
#       test: ["CMD", "rabbitmqctl", "status"]
#       interval: 30s
#       timeout: 10s
#       retries: 5
#   cadvisor:
#     image: gcr.io/cadvisor/cadvisor
#     container_name: cadvisor_verifyTutors
#     volumes:
#       - "/:/rootfs:ro"
#       - "/var/run:/var/run:rw"
#       - "/sys:/sys:ro"
#       - "/var/lib/docker/:/var/lib/docker:ro"
#     ports:
#       - "8080:8080"
#     restart: always
#     networks:
#       - monitoring   
#   node-exporter:
#     image: prom/node-exporter
#     container_name: node_exporter_container
#     volumes:
#       - "/proc:/host/proc:ro"
#       - "/sys:/host/sys:ro"
#       - "/:/rootfs:ro"
#       - "/etc/hostname:/etc/nodename"
#     command:
#       - '--path.procfs=/host/proc'
#       - '--path.sysfs=/host/sys'
#       - '--path.rootfs=/rootfs'
#       - '--collector.filesystem.ignored-mount-points'
#       - '^/(sys|proc|dev|host|etc)($|/)'
#     ports:
#       - "9100:9100"
#     networks:
#       - monitoring
#     restart: always    
#   gateway:
#     container_name: gateway_verifyTutors
#     build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#     restart: always
#     ports: 
#       -  3000:3000 
#     volumes:
#       -  ./api-gateway/src:/app/src
#     env_file: ./api-gateway/configs/.env   
#     environment:
#         AUTH_SERVICE_URL: http://auth:3001
#   notification:
#     container_name: notification_verifyTutors
#     build: 
#       context: ./notification
#       dockerfile: Dockerfile
#     ports:
#       -  3005:3005
#     volumes:  
#       -  ./notification/src:/app/src
#     env_file: ./notification/configs/.env
#     environment:
#        RABBITMQ_ENDPOINT: amqp://verifyTutors:verifyTutors@rabbitmq_container_verifyTutors:5672
#     depends_on:
#      rabbitmq:
#         condition: service_healthy   
#   auth:
#    container_name: auth_verifyTutors
#    build:
#     context: ./auth
#     dockerfile: Dockerfile
#    restart: always
#    ports:
#     -  3001:3001 
#    volumes:
#      -  ./auth/src:/app/src
#      - ./auth/public:/app/public
#    env_file: ./auth/configs/.env    
#    environment:
#      DOCKER_ENV: true
#      RABBITMQ_ENDPOINT: amqp://verifyTutors:verifyTutors@rabbitmq_container_verifyTutors:5672
#      USER_SERVICE: http://user:3004
#    depends_on:
#      rabbitmq:
#       condition: service_healthy  
#   user:
#    container_name: user_verifyTutors 
#    build: 
#     context: ./user
#     dockerfile: Dockerfile 
#    restart: always 
#    ports:
#     -  3004:3004
#    volumes:
#     - ./user/src:/app/src
#     - ./user/public:/app/public
#    env_file: ./user/configs/.env 
#    environment:
#      AUTH_SERVICE_GET: http://auth:3001
#   student:
#     container_name: student_verifyTutors
#     build:
#       context: ./student
#       dockerfile: Dockerfile
#     ports:
#       - "3003:3003"
#     environment:
#       NODE_ENV: development
#       PORT: 3003
#       MONGODB_URL: mongodb+srv://thournhourn:aS93nmdJEZo8g05M@learnwith-api.d8ozm8e.mongodb.net/verifytutorsAuth
#     volumes:
#       - ./student:/app
#       - /app/node_modules
#     restart: always
#     command: npm run start:dev      
# networks:
#   monitoring:
#     driver: bridge  # or another driver if you have specific requirements



version: "3.8"
services:
  rabbitmq:
    container_name: rabbitmq_container_verifyTutors
    image: rabbitmq:3.13.2-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: verifyTutors
      RABBITMQ_DEFAULT_PASS: verifyTutors
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - monitoring

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor
  #   container_name: cadvisor_verifyTutors
  #   volumes:
  #     - "/:/rootfs:ro"
  #     - "/var/run:/var/run:rw"
  #     - "/sys:/sys:ro"
  #     - "/var/lib/docker/:/var/lib/docker:ro"
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   networks:
  #     - monitoring

  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter_container
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
      - "/etc/hostname:/etc/nodename"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc)($|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: always

  gateway:
    container_name: gateway_verifyTutors
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    restart: always
    ports: 
      - 3000:3000 
    volumes:
      - ./api-gateway/src:/app/src
    env_file: ./api-gateway/configs/.env
    environment:
      AUTH_SERVICE_URL: http://auth:3001
    networks:
      - monitoring

  notification:
    container_name: notification_verifyTutors
    build:
      context: ./notification
      dockerfile: Dockerfile
    ports:
      - 3005:3005
    volumes:  
      - ./notification/src:/app/src
    env_file: ./notification/configs/.env
    environment:
      RABBITMQ_ENDPOINT: amqp://verifyTutors:verifyTutors@rabbitmq_container_verifyTutors:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - monitoring

  auth:
    container_name: auth_verifyTutors
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3001:3001 
    volumes:
      - ./auth/src:/app/src
      - ./auth/public:/app/public
    env_file: ./auth/configs/.env    
    environment:
      DOCKER_ENV: true
      RABBITMQ_ENDPOINT: amqp://verifyTutors:verifyTutors@rabbitmq_container_verifyTutors:5672
      USER_SERVICE: http://user:3004
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - monitoring

  user:
    container_name: user_verifyTutors 
    build:
      context: ./user
      dockerfile: Dockerfile 
    restart: always 
    ports:
      - 3004:3004
    volumes:
      - ./user/src:/app/src
      - ./user/public:/app/public
    env_file: ./user/configs/.env 
    environment:
      AUTH_SERVICE_GET: http://auth:3001
    networks:
      - monitoring

  student:
    container_name: student_verifyTutors
    build:
      context: ./student
      dockerfile: Dockerfile
    ports:
      - 3003:3003
    environment:
      NODE_ENV: development
      PORT: 3003
      MONGODB_URL: mongodb+srv://thournhourn:aS93nmdJEZo8g05M@learnwith-api.d8ozm8e.mongodb.net/verifytutorsAuth
    volumes:
      - ./student:/app
    restart: always
    command: npm run start:dev
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
